# catalog-info.yaml - Consolidated Entity Definitions

# ----------------------------------------------------------------------
# 1. TEAM (Kind: Group) - CORRECT START
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: splitz-team
  title: Sprint online Team
  description: Get a loan with us.
spec:
  type: team
  profile:
    displayName: Splitz Team
    email: splitz-team@example.com
  parent: engineering-department 
  children: []
  members:
    - user:gago
    - user:edward

---
# ----------------------------------------------------------------------
# 2. MEMBERS (Kind: User) - FIXED! üõ†Ô∏è
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: gago
  title: Gagoo
  description: Product Owner of Splitz.
spec:
  profile:
    displayName: Gagoooo
    email: gagog.doe@example.com
  memberOf:
    - splitz-team

---
# Another User entity - FIXED!
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: edward
  title: Edward
  description: UI Lead for the Splitz Team.
spec:
  profile:
    displayName: Edward
    email: Edward.smith@example.com
  memberOf:
    - splitz-team

---
# ----------------------------------------------------------------------
# 3. API (Kind: API) - FIXED! üõ†Ô∏è
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: bulk-ingestion-api
  title: Bulk Ingestion REST API
  description: Handles initial data submission and status checks for bulk jobs.
  tags:
    - rest
    - production
spec:
  type: openapi
  lifecycle: production
  owner: group:splitz-team
  system: bulk-processing-system
  definition:
    $text: https://github.com/example-org/bulk-ingestion-api/blob/main/openapi.yaml

---
# ----------------------------------------------------------------------
# 4. SERVICES (Kind: Component, Type: service) - FIXED! üõ†Ô∏è
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-worker-service
  title: Bulk Worker Service
  description: Asynchronous service to process bulk jobs.
  tags:
    - java
    - queue
  annotations:
    backstage.io/techdocs-ref: url:https://github.com/example-org/bulk-worker-service/blob/main/docs
spec:
  type: service
  lifecycle: production
  owner: group:splitz-team
  system: bulk-processing-system
  consumesApis:
    - bulk-ingestion-api

---
# ----------------------------------------------------------------------
# 5. LIBS (Kind: Component, Type: library) - FIXED! üõ†Ô∏è
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-validator-lib
  title: Bulk Data Validator Library
  description: Common logic for validating incoming data formats.
  tags:
    - shared
    - python
  annotations:
    backstage.io/techdocs-ref: url:https://github.com/example-org/bulk-validator-lib/blob/main/docs
spec:
  type: library
  lifecycle: production
  owner: group:splitz-team
  system: bulk-processing-system

---
# ----------------------------------------------------------------------
# 6. UI COMPONENTS (Kind: Component, Type: website) - FIXED! üõ†Ô∏è
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-status-dashboard
  title: Bulk Status Dashboard
  description: User interface for tracking and managing bulk processing jobs.
  tags:
    - react
    - ui
  annotations:
    github.com/project-slug: pvo15/bulkiii
spec:
  type: website
  lifecycle: production
  owner: group:splitz-team
  system: bulk-processing-system
  consumesApis:
    - bulk-ingestion-api
