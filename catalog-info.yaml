# catalog-info.yaml - Consolidated Entity Definitions

# ----------------------------------------------------------------------
# 1. TEAM (Kind: Group)
# Defines the team that owns all related entities.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: bulk-core-team
  title: Bulk Core Processing Team
  description: Manages all services related to high-volume data ingestion and processing.
spec:
  type: team
  profile:
    displayName: Bulk Core Team
    email: bulk-team@example.com
  parent: engineering-department 
  children: []
  # ðŸ”— MEMBERS: Lists the User entities belonging to this team.
  members:
    - user:john-doe
    - user:jane-smith

---
# ----------------------------------------------------------------------
# 2. MEMBERS (Kind: User)
# Defines two user entities that are members of the team.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: john-doe
  title: John Doe
  description: Backend Lead for the Bulk Core Team.
spec:
  profile:
    displayName: John Doe
    email: john.doe@example.com
  # ðŸ”— TEAM: Links the user back to their group.
  memberOf:
    - bulk-core-team

---
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: jane-smith
  title: Jane Smith
  description: UI/Frontend Developer for the Bulk Core Team.
spec:
  profile:
    displayName: Jane Smith
    email: jane.smith@example.com
  # ðŸ”— TEAM: Links the user back to their group.
  memberOf:
    - bulk-core-team

---
# ----------------------------------------------------------------------
# 3. API (Kind: API)
# Defines the API used by the service and the UI component.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: bulk-ingestion-api
  title: Bulk Ingestion REST API
  description: Handles initial data submission and status checks for bulk jobs.
  tags:
    - rest
    - production
spec:
  type: openapi
  lifecycle: production
  # ðŸ”— TEAM: The API is owned by the Bulk Core Team.
  owner: group:bulk-core-team
  system: bulk-processing-system
  definition:
    $text: https://github.com/example-org/bulk-ingestion-api/blob/main/openapi.yaml

---
# ----------------------------------------------------------------------
# 4. SERVICES (Kind: Component, Type: service)
# Defines the backend worker service.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-worker-service
  title: Bulk Worker Service
  description: Asynchronous service to process bulk jobs.
  tags:
    - java
    - queue
  annotations:
    backstage.io/techdocs-ref: url:https://github.com/example-org/bulk-worker-service/blob/main/docs
spec:
  type: service
  lifecycle: production
  # ðŸ”— TEAM: Owned by the Bulk Core Team.
  owner: group:bulk-core-team
  system: bulk-processing-system
  # ðŸ”— API: Consumes its own defined API (or provides a messaging API).
  consumesApis:
    - bulk-ingestion-api

---
# ----------------------------------------------------------------------
# 5. LIBS (Kind: Component, Type: library)
# Defines a reusable library used by the service and UI.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-validator-lib
  title: Bulk Data Validator Library
  description: Common logic for validating incoming data formats.
  tags:
    - shared
    - python
  annotations:
    backstage.io/techdocs-ref: url:https://github.com/example-org/bulk-validator-lib/blob/main/docs
spec:
  type: library
  lifecycle: production
  # ðŸ”— TEAM: Owned by the Bulk Core Team.
  owner: group:bulk-core-team
  system: bulk-processing-system

---
# ----------------------------------------------------------------------
# 6. UI COMPONENTS (Kind: Component, Type: website)
# Defines the frontend UI component, linked to the user's provided repository.
# ----------------------------------------------------------------------
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: bulk-status-dashboard
  title: Bulk Status Dashboard
  description: User interface for tracking and managing bulk processing jobs.
  tags:
    - react
    - ui
  annotations:
    # ðŸ”— CODE: Links to the GitHub repository provided by the user.
    github.com/project-slug: pvo15/bulkiii
    backstage.io/techdocs-ref: url:https://github.com/pvo15/bulkiii/blob/main/docs
spec:
  type: website
  lifecycle: production
  # ðŸ”— TEAM: Owned by the Bulk Core Team.
  owner: group:bulk-core-team
  system: bulk-processing-system
  # ðŸ”— API: Consumes the Bulk Ingestion API to display job status.
  consumesApis:
    - bulk-ingestion-api
